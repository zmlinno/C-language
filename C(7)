#include <stdio.h>
#include <string.h>
//
//int main()
//{
// //문자열 복사 시
// //hello bit
// char arr1[20] = { 0 };
// char arr2[] = "hello bit";
//
// //arr2의 문자열을 arr1으로 복사
// char* ret = strcpy(arr1, arr2);
// printf("%s\n", ret);
//
// return 0;
//}

//int main()
//{
// char arr[20] = "hello bit";
// printf("%s\n", arr);
// memset(arr, 'x', 5);
// printf("%s\n", arr);
//
// return 0;
//}
//

//두 정수 중에서 최댓값을 찾는 함수를 작성하시오.

//함수 정의
//
//int get_max(int x, int y)
//{
// if (x > y)
// return x;
// else
// return y;
//}
//
//
//
//
//int get_max(int x, int y)
//{
// return (x > y ? x : y);
//}
//
//
//int main()
//{
// int a = 0;
// int b = 0;
// //입력
// //scanf("%d %d", &a, &b);
// //a와 b 중에서 큰 값을 찾음
// //int m = get_max(a, b);//함수 사용 시나리오
// int m = get_max(get_max(3, 7), 5);//함수 사용 시나리오
//
// //출력
// printf("%d\n", m);
//
// return 0;
//}

//void test(void)
//{
// printf("hehe\n");
//}
//
//int main()
//{
// test();
// return 0;
//}

//두 정수 변수의 내용을 교환하는 함수를 작성하시오.

//int main()
//{
// int a = 0;
// int b = 0;
// //입력
// scanf("%d %d", &a, &b);
// //교환
// printf("교환 전: a=%d b=%d\n", a, b);
//
// int tmp = 0;//세 번째 변수
//
// tmp = a;
// a = b;
// b = tmp;
//
// //출력
// printf("교환 후: a=%d b=%d\n", a, b);
//
// return 0;
//}

//함수 호출 시, 실인수를 형식인수에 전달할 때, 형식인수는 실인수의 임시 복사본이 되며, 형식인수의 수정은 실인수에 영향을 주지 않는다.
//void Swap(int x, int y)
//{
// int tmp = x;
// x = y;
// y = tmp;
//}
//
//int main()
//{
// int a = 0;
// int b = 0;
// //입력
// scanf("%d %d", &a, &b);//3 5
// //교환
// printf("교환 전: a=%d b=%d\n", a, b);
// Swap(a, b);
// //출력
// printf("교환 후: a=%d b=%d\n", a, b);
//
// return 0;
//}

//int main()
//{
// int a = 10
//	//a = 20;
//
//	int* pa = &a;
//	*pa = 20;
//
//	printf("a=%d\n", a);
//
//	return 0;
//}
//

//void Swap2(int* pa, int* pb)
//{
//	int tmp = *pa;//tmp = a;
//	*pa = *pb;    //a=b
//	*pb = tmp;    //b=tmp
//}
//
//int main()
//{
//	int a = 0;
//	int b = 0;
//	//입력
//	scanf("%d %d", &a, &b);//3 5 
//	//교환
//	printf("交换前：a=%d b=%d\n", a, b);
//	Swap2(&a, &b);
//	
//	printf("交换后：a=%d b=%d\n", a, b);
//
//	return 0;
//}
//



// 100~200 사이의 소수 구하기

// 소수이면 1 반환
// 소수가 아니면 0 반환
//int is_prime(int n)
//{
//	int j = 0;
//	for (j = 2; j <= sqrt(n); j++)
//	{
//		if (n % j == 0)
//		{
//			return 0;//소수가 아님
//		}
//	}
//	return 1;//소수임
//}
//int main()
//{
//	int i = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		// i가 소수인지 확인
//		if (is_prime(i))
//		{
//			printf("%d ", i);
//		}
//	}
//
//	return 0;
//}



//
// 윤년인지 아닌지 판별하는 함수를 작성하시오.
// 1. 4로 나누어 떨어지고, 100으로 나누어 떨어지지 않으면 윤년이다.
// 2. 400으로 나누어 떨어지면 윤년이다.
//

//int is_leap_year(int y)
//{
// if (y % 4 == 0 && y % 100 != 0)
// {
// return 1;
// }
// if (y % 400 == 0)
// {
// return 1;
// }
//
// return 0;
//}

//int is_leap_year(int y)
//{
// if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0))
// return 1;
// else
// return 0;
//}
//
//int is_leap_year(int y)
//{
// return (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0));
//}
//
//int main()
//{
// int y = 0;
// for (y = 1000; y <= 2000; y+=4)
// {
// // y가 윤년인지 확인
// // 윤년이면 1을 반환
// // 윤년이 아니면 0을 반환
// if (is_leap_year(y))
// {
// printf("%d ", y);
// }
// }
// return 0;
//}
//

// 1년이 윤년인지 아닌지를 판별하는 함수를 작성하시오.
// 1. 4로 나누어 떨어지고, 100으로 나누어 떨어지지 않으면 윤년이다.
// 2. 400으로 나누어 떨어지면 윤년이다.

//int is_leap_year(int y)
//{
// if (y % 4 == 0 && y % 100 != 0)
// {
// return 1;
// }
// if (y % 400 == 0)
// {
// return 1;
// }
//
// return 0;
//}

//int is_leap_year(int y)
//{
// if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0))
// return 1;
// else
// return 0;
//}
//
//int is_leap_year(int y)
//{
// return (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0));
//}
//
//int main()
//{
// int y = 0;
// for (y = 1000; y <= 2000; y+=4)
// {
// // y가 윤년인지 확인
// // 윤년이면 1을 반환
// // 윤년이 아니면 0을 반환
// if (is_leap_year(y))
// {
// printf("%d ", y);
// }
// }
// return 0;
//}
//
