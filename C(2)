#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
//
////代码模板
//int main() {
//    printf("     **     \n");
//    printf("     **     \n");
//    printf("************\n");
//    printf("************\n");
//    printf("    *  *    \n");
//    printf("    *  *    \n");
//
//    return 0;
//}
//
//
//#include <stdio.h>
//
////
////scanf函数返回的是：实际读到的数据的个数
////scanf 函数读取失败的时候，返回的是EOF
////EOF - end of file 文件结束标志
////
///*
//int main() {
//    int iq = 0;
//    //输入
//    while (scanf("%d", &iq) == 1) {
//        //输出
//        if (iq >= 140)
//            printf("Genius\n");
//    }
//
//    return 0;
//}
//
//*/
//
//
//int main() {
//    int iq = 0;
//    //输入
//    while (scanf("%d", &iq) != EOF) {
//        //输出
//        if (iq >= 140)
//            printf("Genius\n");
//    }
//
//    return 0;
//}
//
//#include <stdio.h>
//
//int main()
//{
//    printf("I lost my  cellphone!\n");
//    return 0;
//}
//
//#include <stdio.h>
//
//int main() {
//    int a = 40;
//    int c = 212;
//    int ret = (-8 + 22) * a - 10 + c / 2;
//    printf("%d\n", ret);
//
//    return 0;
//}


//void test()
//{
//	int a = 10;
//
//}
//
//int main()
//{
//
//	return 0;
//}

//#include <stdio.h>
//#include <string.h>
//int main()
//{
//    printf("%d\n", strlen("c:\test\121"));
//    return 0;
//}
//

//int main()
//{
//	//如果想知道两个数相除后的商，就使用/
//	//如果想知道两个数相除后的余数，就使用%
//	printf("%d\n", 11 / 5);
//	printf("%d\n", 11 % 5);
//
//
//	return 0;
//}
//
//
//#include <stdio.h>
//
//int main() {
//    int m = 0;
//    //输入
//    scanf("%d", &m);
//
//    //判断并输出
//    if (m % 5 == 0)
//        printf("YES\n");
//    else
//        printf("NO\n");
//
//    return 0;
//}
//
#include <stdio.h>

// int main() {
//     int x = 0;
//     //输入
//     scanf("%d", &x);

//     if(x>0)
//         printf("-1\n");
//     else if(x<0)
//         printf("1\n");
//     else
//         printf("0\n");

//     return 0;
// }
//
//
//int main() {
//    int x = 0;
//    int y = 0;
//    //输入
//    scanf("%d", &x);
//    //判断
//    if (x > 0)
//        y = -1;
//    else if (x < 0)
//        y = 1;
//    else
//        y = 0;
//    //输出
//    printf("%d\n", y);
//    return 0;
//}

//#include <stdio.h>
//
//int main() {
//    int m = 0;
//    int n = 0;
//    //输入
//    scanf("%d %d", &m, &n);
//    //输出
//    printf("%d %d\n", m / n, m % n);
//
//    return 0;
//}
//

//
//函数
//数学  y = f(x)
//z = f(x,y)
//

#include <stdio.h>

//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	//输入
//	scanf("%d %d", &num1, &num2);
//	//求和
//	sum = num1 + num2;
//	
//	//输出
//	printf("%d\n", sum);
//
//	return 0;
//}

//函数
//int Add(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}
//
//int Add(int x, int y)
//{
//	return (x + y);
//}
//
//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	//输入
//	scanf("%d %d", &num1, &num2);
//	//求和
//	sum = Add(num1, num2);
//
//	//输出
//	printf("%d\n", sum);
//
//	return 0;
//}
//
//int main()
//{
//	/*int a = 1;
//	int b = 2;
//	int c = 3;
//	int d = 4;*/
//	//1~10
//	//数组的概念 - 数组中可以存放一组相同类型的元素
//	//数组 - 一组相同类型元素的集合
//	//数组的创建和初始化
//	//int arr1[10] = {1,2,3,4,5,6,7,8,9,10};
//	//int arr2[10] = { 1,2,3,4,5};//不完全初始化，剩余的默认初始化为0
//	//char ch[5] = { 'a', 'b', 'c' };//不完全初始化，剩余默认初始化为\0
//	
//	int arr1[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	//0~9
//	/*printf("%d\n", arr1[6]);*/
//	int i = 0;
//	while (i<10)
//	{
//		printf("%d ", arr1[i]);
//		i = i + 1;
//	}
//
//	return 0;
//}

//
//C语言提供了非常丰富的操作符，使得C语言非常的灵活
//

//%d - 十进制的整型
//%c - 字符
//%s  - 字符串
//%f - 打印float类型的浮点数
//%lf - 打印double类型的浮点数

//
//   / 除号的两端如果都是整数，执行的是整数除法
//   / 除号的两端至少有一个数是浮点数，才能执行浮点数的除法
//
// / 除号
// % 取模（取余）,%操作的两个操作数必须都是整数
//

//int main()
//{
//	float n = 10 % 4;
//	printf("%f\n", n);
//
//	return 0;
//}
//
//int main()
//{
//	int a = 0;//初始化，创建变量的同时给一个值，这叫初始化
//	a = 20;//赋值
//
//	a = a + 5;
//	a += 5;
//
//	a = a * 10;
//	a *= 10;
//
//	return 0;
//}
//

//真假
//C语言中
//0就是假
//非0表示真

//int main()
//{
//	int flag = 5;
//
//	//如果flag为真，就打印hehe
//	if (flag)
//	{
//		printf("hehe\n");
//	}
//	//
//	if (!flag)
//	{
//		printf("haha\n");
//	}
//	return 0;
//}
//

//
//刷题
//
//

//int main()
//{
//	int a = -10;
//	int b = a;
//	printf("%d\n", b);
//
//	return 0;
//}

//
//sizeof是操作符,是计算变量所占内存空间的大小，单位是字节
//strlen是库函数，是计算字符串的长度的，统计的是字符串中\0之前出现的字符个数
//
//int main()
//{
//	int a = 10;
//	float f = 5.5f;
//
//	printf("%d\n", sizeof(a));//1
//	printf("%d\n", sizeof(int));//2
//
//	printf("%d\n", sizeof(f));//3
//	printf("%d\n", sizeof(float));//4
//
//	return 0;
//}
//

//int main()
//{
//	int a = 100;
//	//int b = (a++);//后置++，先使用，后++
//	//int b=a,a=a+1;
//
//	//int b = ++a;//前置++，先++，后使用
//	//a=a+1,b=a;
//
//	//int b = a--;
//	//int b = a,a=a-1;
//
//	int b = --a;
//	//a=a-1,b=a;
//	printf("a=%d b=%d\n", a, b);
//
//	return 0;
//}


//int main()
//{
//	//(类型) - 强制类型转换
//	int a = (int)3.14;//这里只取整数部分
//	printf("%d\n", a);
//
//	return 0;
//}

//int main()
//{
//	int a = 3;
//	if (a = 5)
//	{
//		printf("hehe\n");
//	}
//
//	return 0;
//}
//
//int main()
//{
//	//年龄18~36 青年
//	int age = 2;
//	if (18 <= age <= 36)
//		printf("青年\n");
//
//	//if (age >= 18 && age <= 36)
//	//	printf("青年\n");
//
//	//&& || 只关注真假
//	//&& 两边同时为真，才为真
//	//|| 两边同时为假，才为假
//
//	//int a = 0;
//	//int b = 0;
//	//if (a || b)
//	//	printf("haha\n");
//
//	//if (a && b)
//	//{
//	//	printf("hehe\n");
//	//}
//	return 0;
//}

//int main()
//{
//	int a = 0;
//	int b = 0;
//	int m = 0;
//	scanf("%d %d", &a, &b);
//	if (a > b)
//		m = a;
//	else
//		m = b;
//
//	m = (a > b ? a : b);
//
//	printf("%d\n", m);
//	return 0;
//}

//int main()
//{
//	int arr[10] = {1,2,3,4,5,6,7,8,9,0};
//	printf("%d\n", arr[4]);//[]下标引用操作符
//
//	return 0;
//}

//
//int Add(int x, int y)
//{
//	int z = 0;
//	z = x + y;
//	return z;
//}
//
//int main()
//{
//	int num1 = 0;
//	int num2 = 0;
//	int sum = 0;
//	//输入
//	scanf("%d %d", &num1, &num2);
//	//求和
//	sum = Add(num1, num2);//()函数调用操作符
//
//	//输出
//	printf("%d\n", sum);
//
//	return 0;
//}

int main()
{
	{
		int num = 10;

	}

	return 0;
}
